<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- ###PARAMETERS### -->
    <bean name="NumberOfTicks" class="java.lang.Long">
        <constructor-arg index="0" value="100" type="long"/>
    </bean>
    <bean name="StreetLength" class="java.lang.Integer">
        <constructor-arg index="0" value="10" type="int"/>
    </bean>
    <bean name="LongestParkingTime" class="java.lang.Integer">
        <constructor-arg index="0" value="10" type="int"/>
    </bean>
    <bean name="NumberOfCars" class="java.lang.Integer">
        <constructor-arg index="0" value="5" type="int"/>
    </bean>
    <bean name="Population" class="com.github.themetalone.parking.core.car.heuristic.DecideAfterNSlotsHeuristic">
        <constructor-arg name="n" value="5"/>
    </bean>
    <bean name="HeuristicProvider" class="com.github.themetalone.parking.core.car.heuristic.providers.UniformHeuristicProvider">
        <property name="heuristic" ref="Population"/>
    </bean>
    <bean name="CarWaitingDistribution" class="org.apache.commons.math3.distribution.GammaDistribution">
        <constructor-arg name="scale" value="2"/>
        <constructor-arg name="shape" value="5"/>
    </bean>
    <bean name="StreetWaitingDistribution" class="org.apache.commons.math3.distribution.UniformIntegerDistribution">
        <constructor-arg name="lower" value="2"/>
        <constructor-arg name="upper" value="5"/>
    </bean>
    <bean name="SimulationDataCollector"
          class="com.github.themetalone.parking.core.data.SQLiteSimulationDataCollectorImpl">
        <constructor-arg name="location" value="./simulationData"/>
    </bean>
    <!--bean name="SimulationDataCollector" class="com.github.themetalone.parking.core.data.testing.ToLogSimulationDataCollector"/-->

    <!-- ###CONFIG### -->
    <!-- Proceed only if you know what you're doing -->
    <bean name="Simulation" class="com.github.themetalone.parking.core.Simulation">
        <constructor-arg name="streetProvider" ref="StreetProvider"/>
        <constructor-arg name="ticks" ref="NumberOfTicks"/>
        <property name="simulationDataCollector" ref="SimulationDataCollector"/>
    </bean>

    <bean name="StreetProvider" class="com.github.themetalone.parking.hutchinson.street.HutchinsonStreetProviderImpl">
        <constructor-arg name="streetlength" ref="StreetLength"/>
        <property name="carProvider" ref="CarProvider"/>
        <property name="parkingSlotProvider" ref="ParkingSpotProvider"/>
        <property name="integerDistribution" ref="StreetWaitingDistribution"/>
    </bean>

    <bean name="CarProvider" class="com.github.themetalone.parking.hutchinson.car.FiniteHutchinsonCarProviderImpl">
        <constructor-arg name="numberOfCars" ref="NumberOfCars"/>
        <property name="realDistribution" ref="CarWaitingDistribution"/>
        <property name="heuristicProvider" ref="HeuristicProvider"/>
        <property name="longestParkingTime" ref="LongestParkingTime"/>
        <property name="simulationDataCollector" ref="SimulationDataCollector"/>
        <property name="parkingSlotProvider" ref="ParkingSpotProvider"/>
    </bean>

    <bean name="ParkingSpotProvider" class="com.github.themetalone.parking.core.slot.ParkingSlotProviderImpl">
        <property name="simulationDataCollector" ref="SimulationDataCollector"/>
    </bean>
    <!--bean name="HeuristicProvider"
          class="com.github.themetalone.parking.core.car.heuristic.providers.SingleMutantHeuristicProvider">
        <property name="mutant" ref="Mutant"/>
        <property name="population" ref="Population"/>
        <property name="providedUntil" value="10"/>
    </bean-->
    <!--bean name="Mutant" class="com.github.themetalone.parking.core.car.heuristic.DecideAfterNSlotsHeuristic">
        <constructor-arg name="n" value="30"/>
    </bean-->


</beans>